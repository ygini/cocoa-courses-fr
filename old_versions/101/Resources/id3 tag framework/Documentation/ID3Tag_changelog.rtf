{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red35\green110\blue37;}
\margl1440\margr1440\vieww9000\viewh9000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\fs24 \cf0 Change Log\
1.00, 30 July 2006\
- Fixed problem parsing v2.4 frames.\
- Improved comment extraction and setting methods to better handle iTunes 6.05 'junk' comment frames.  iTunes stores equalisation information in comment frames.  iTunes comment frame Can now specify  \
- Modified tag writing functions to better work around iTunes broken v2.4 tag implementation.  iTunes does not properly read or write 2.4 frame lengths.  Frames longer than 127 bytes are handled incorrectly and iTunes will stop once it reaches a correctly formatted frame that is longer than 127 bytes.  Frames are now written out in ascending order to ensure that iTunes is able to read as much as possible of the formatted frames before it encountering a long frame. Note Comment frames are not sorted because order is important. All comment frames are placed in the order they appear in the tag after all the frames shorter than 127 bytes.\
- Improved v2.4 parsing routine to work around the iTunes v2.4 bug.\
- Cleaned up the targets and included a new Xcode styled target for Universal binaries.  Universal compiles and should be endian safe, still needs to be tested.\
\
0.99, 4 Dec 05\
- Fixed problem parsing v2.2 tags\
- Fixed compiler warnings.\
- Fixed slow memory leak.\
\
0.98, 27 May 05 (The having children under 3 yrs slows you down release)\
- Added high level functions to allow simple retrieval and setting of the contents of any valid v2 frame in a v2 tag.\
- Fixed issue with unsynching frames\
- Fixed problems with writing iTunes compatible comment fields.\
- Improved robustness of v2 tag parsing - Better handling of extended headers - better handling of broken frames - fixed issue when first frame was broken.\
- Fixed unicode write issue for setTitle:\
- Fixed incorrect frame tags for composer frames for v2.2 tags.\
Known issues\
- can write but can't correctly parse unicode genres.\
\
0.97, 30 Nov 04\
- Fixed issue with calling "
\f1\fs20 \CocoaLigature0 examineFile:
\f0\fs24 \CocoaLigature1 " multiple times.  The object will not correctly parse the v2 tag after it has examined a tag containing only a v1 tag. \
- Framework can now be set to automatically fallback and looks for missing v2 tag information in the v1 tag if a v1 tag is present.\
- Added high level method selected frames to be dropped.\
- Other minor bug fixed\
\
0.96, 9 April 04\
- Improved handling of iTunes volume equalization and CDDB comment frames.\
- Fixes to the build process \
- Minor bug fixes \
\
0.95, 1 Nov 03\
- Major back end rewrite to change in memory storage mechanism from an array to a dictionary. Changes made to better handle repeated frames and simplify writing of images into the tag.\
- Major improvements to the API, added methods to set images, the composer, ... , \
- Improved the the API for extracting mp3 file information. \
- Minor bug fixes\
\
0.941, 13 Oct 03\
- Fixed compile problem. ie I packaged the wrong files, just a little version control issue. :)\
- Added a new method to simplify usage.  -(BOOL)foundTag.  return true if a tag is found.\
\
0.94, 12 Oct 03\
- Significant changes to the API to simplify use.  You no longer need to specify which tag (v1, v2) you want to get the information from, the Framework will automatically get if from the V2 if it is present and V1 if the V2 is not present.  A new method -(void) selectTag:(int)TAG has been added to allow you to force the lib to get data from a particular tag if required.\
- Changed behavior of -(bool)v1TagPresent so that it will check the file for a V1 tag and parse it if you have the frameworks set to not Parse V1 if V2 found, before returning the result.\
- leading from the changes above and for for speed reason I have set the default behavior of the framework not to check and parse the V1 tag if a V2 is found.  Now if you want to use a V1 tag simply use v1TagPresent and it will prompt the Framework to check for a tag and parse it if necessary , or if you have Always Write V1 set then if you try to change an attribute or update the tags the Framework will automatically check for the V1 and parse it if required.\
- A new feature has been added where the Framework can now produce a hash finger print of  a portion of the file.  The md5 hash process 3*2048 bytes after the first mp3 frame.  It can be used to find the file if the name and/or tags changes.\
- Have fixed writing of genre to v1 tags.\
- Have fixed a small memory leak when changing tag contents.\
- Updated documentation to reflect changes to the API.\
\
0.93, 12 Sept 03\
- Added preference file to allow a user to set the default behavior of the library (always save a tag v1 tag on update, dito v2, only read v1 tag if v2 doesn't exist , drop v1 tag when v2 is written) to be easily changed. \
- Fixed problem with getComent dropping leading character\
- Fixed issue when writing new v1 tag to file.\
- Fixed issue when reading track from ill formed frames\
- Improved compliance with standard, now write a null at end of text frames.\
- Fixed repad issues when writing new v2 tag.\
\
0.92,  27 Aug 03\
- Added mpeg header parsing routines. You can now get mpeg meta information such as (song length, encoding info, bit rate, sample rate ...)\
- Added support for GNUStep, Thanks Fabien\
- Improved junk trimming from string extraction routine.  Thanks 
\f1\fs20 \cf2 \CocoaLigature0 Lorenzo.
\f0\fs24 \cf0 \CocoaLigature1 \
- Updated/fixed problems in documentation\
\
0.91b,  31 July 03\
- Padding is now correctly zeroed.\
- Fixed problem where extra spaces were being appended to string extracted from V2 frame and V1 tags.\
- Created a quick and dirty tag extraction utility for so uses can email me tags (with out email the whole MP3) that are causing problem.\
\
0.91a,  26 July 03\
- Fixed incorrect frame lengths when writing v2.3 Frames to a tag. Included code to catch problem frame lengths.\
- Fixed problem where updates to song titles were not being flagged for update\
- Fixes problem with processing v2.x genre strings into genre arrays.\
- Fixed writing of genre arrays into v2.x genre strings.\
- Changed Framework install path @executable_path/../Frameworks and specified a seg1addr.\
\
0.91,  23  July 03\
-Added method to extract images frames from v2 Tags.\
\
0.9a , 30 June 03\
\
- Fixed minor compile problems due to incorrect paths and an old reference\
- Created change log }